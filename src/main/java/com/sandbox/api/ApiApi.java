/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.sandbox.api;

import com.sandbox.model.LogIn;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-27T19:24:32.513279800+03:00[Europe/Minsk]")
@Validated
@Tag(name = "api", description = "the api API")
public interface ApiApi {

    /**
     * POST /api/authentication/login : LogIn
     * As a User I want to to have a login functionality so that I can get an access to my User account
     *
     * @param logIn  (required)
     * @return ok (status code 200)
     *         or Invalid Email or Password (status code 401)
     *         or Wrong Email or Password format (status code 422)
     */
    @Operation(
        operationId = "logIn",
        summary = "LogIn",
        tags = { "User Management" },
        responses = {
            @ApiResponse(responseCode = "200", description = "ok"),
            @ApiResponse(responseCode = "401", description = "Invalid Email or Password"),
            @ApiResponse(responseCode = "422", description = "Wrong Email or Password format")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/authentication/login",
        consumes = { "application/json" }
    )
    ResponseEntity<Void> logIn(
        @Parameter(name = "LogIn", description = "", required = true) @Valid @RequestBody LogIn logIn
    );

}
